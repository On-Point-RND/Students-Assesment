This document presents a detailed analysis of using constrained models for generating synthetic data, specifically within the context of the HELOQ dataset. Here's a breakdown of the key information:

**1. Introduction to Constrained Models:**

* **Purpose:** Constrained models aim to create realistic synthetic data that adheres to specific rules or constraints defined on the original dataset.
* **Method:** A Genetic Algorithm (GA) is employed to automatically discover these constraints.
* **Constraint Formulation:** Constraints are expressed as linear inequalities (e.g., "number of installment trades with balance â‰¥ 0").

**2. Genetic Algorithm for Finding Constraints:**

The document outlines the steps involved in the GA:

* **Initialization:** Random constraints are created by combining columns from the dataset using mathematical operators (+, -) and a fixed threshold.
* **Fitness Calculation:** The fitness of each constraint is determined by the number of violations it generates when applied to the dataset. Fewer violations indicate a "better" constraint.
* **Selection:** Constraints with lower violation counts (higher fitness) are selected as "parents" for the next generation.
* **Crossover:** Pairs of parent constraints are combined to create new "offspring" constraints.
* **Mutation:** Random changes are introduced to the offspring constraints (e.g., changing operators, signs, or thresholds).

**3. Experiments with Constrained Models (CTGAN & TVAE):**

The document details experiments conducted on two models:

* **CTGAN:**  A model trained on the CTGAN dataset using the GA to find constraints.
* **TVAE:** A model trained on the TVAE dataset using the GA to find constraints.

For each model and dataset, the following information is presented:

* **Model Performance:** ROC-AUC, Accuracy, and F1-score of various classification models (AdaBoost, Decision Tree, Multi-Layer Perceptron, Random Forest, XGBoost) after being trained with the constraints found by the GA.
* **ROC-AUC Spread:**  The variation in ROC-AUC scores across three different sets of constraints generated by the GA. This indicates the robustness of the constraints.

**4. Key Findings & Observations:**

* **Constrained models generate high-quality synthetic data:** The experiments demonstrate that constrained models can produce synthetic data with good classification performance (high ROC-AUC, accuracy, and F1-score).
* **GA helps discover relevant constraints:** The Genetic Algorithm effectively identifies constraints that capture important relationships within the data.
* **Robustness of Constraints:** The ROC-AUC spread indicates the stability of the constraints found by the GA.
* **Trade-off between accuracy and complexity:** While constrained models offer high accuracy, they are more complex to set up compared to uncconstrained models.

**5. Conclusion:**

* Constrained models are valuable for generating realistic synthetic data that adheres to specific rules.
* The choice between constrained and uncconstrained models depends on the specific task and the balance between data accuracy and the effort required to define constraints.

**In essence, this document showcases a practical application of Genetic Algorithms to automate the process of creating constraints for generating high-quality synthetic data. It highlights the benefits and considerations associated with using constrained models in data science.**